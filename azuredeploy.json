{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {	
		"projectName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
			"defaultValue": "Accops Digital Workspace",
            "metadata": {
                "description": "Define the project name."
            }
        },
		"AccopsDaasSystemSize": {
           "type": "string",
           "allowedValues": [
               "Demo",
               "25 CCU",
               "50 CCU",
               "100 CCU",
               "500 CCU",
               "1000 CCU",
               "2000 CCU",
               "5000 CCU"			   
            ],
            "defaultValue": "100 CCU",
            "metadata": {
                "description": "The size of the Accops DaaS System you want to deploy."
                }
        },
		"systemAvailability": {
            "type": "string",
            "allowedValues": [
               "HA",
               "Not HA"
            ],
            "defaultValue": "Not HA",
            "metadata": {
                "description": "Determines whether this is a high available deployment or not. A HA deployment contains multiple instances of single point of failures."
               }
        },
		"HysecureWebNodeNamePrefix": {
            "defaultValue": "HySecure-Web-Node-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2s",
            "type": "String",
			"allowedValues": [
						"Standard_B2s",
						"Standard_F2s_v2",
						"Standard_F4s_v2",
						"Standard_B4ms",
						"Standard_F8s_v2",
                	    "Standard_DS1",
                	    "Standard_DS2",
                	    "Standard_DS3",
						"Standard D2s v3",
						"Standard_D2s_v3",
                	    "Standard_DS4",
                	    "Standard_DS11",
                	    "Standard_DS12",
                        "Standard_DS13",
                	    "Standard_DS14"
            	            ],
            "metadata": {
                "description": "Size of the virtual Machines for Hysecure Web Nodes"
            }
        },
		"numberOfWebTierInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of HySecure Web Tier Servers"
            },
            "allowedValues": [
                		1,
                		2,
						3,
						4,
						5,
						6,
						7,
						8,
						9,
						10
            		     ],
            "defaultValue": 1
        },
        "HysecureManagementNodeNamePrefix": {
            "defaultValue": "HySecure-Mgmt-Node-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for HySecure Management VM names"
            }
        },
		"adminUsername": {
		    "defaultValue": "accopsadmin",
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Admin password"
            },
			"defaultValue": "Demo@1234567890"
        },
		"domainName": {
            "type": "string",
            "defaultValue": "accops.local",
            "metadata": {
            "description": "The FQDN of the AD Domain created "
            }
        },
		"osType": {
            "type": "string",
            "allowedValues": [
                "Windows Server 2016 Datacenter",
                "Windows Server 2019 Datacenter",
                "Windows Server 2022 Datacenter"
            ],
            "defaultValue": "Windows Server 2022 Datacenter",
            "metadata": {
                "description": "The type of the operating system you want to deploy."
            }
        },
		"HyworksBrokerNodeNamePrefix": {
            "defaultValue": "HyWorksBroker-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"vmSizeOfBroker": {
            "defaultValue": "Standard_B2s",
            "type": "String",
			"allowedValues": [
				"Standard_B2s",
				"Standard_F2s_v2",
				"Standard_F4s_v2",
				"Standard_F8s_v2",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "Size of the virtual Machines for HyWorks Broker Nodes"
            }
        },
		"numberOfBrokerTierInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of HyWorks Broker Tier Servers"
            },
            "allowedValues": [
                1,
                2,
				3,
				4,
				5
            ],
            "defaultValue": 1
        },
		"HyworksControllerNodeNamePrefix": {
            "defaultValue": "HyWorks-Ctrl-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }	
        },
		"sqlVMSize": {
		  "type": "string",
		  "metadata": {
			"description": "The size of the SQL VMs Created"
		  },
		  "defaultValue": "Standard_D8s_v3"
		},
		"witnessVMSize": {
		  "type": "string",
		  "metadata": {
			"description": "The size of the Witness VM Created"
		  },
		  "defaultValue": "Standard_D2s_v3"
		},
		"sqlServerServiceAccountUserName": {
            "defaultValue": "sqlservice",
            "type": "String",
            "metadata": {
                "description": "The SQL Server Service Account name"
            }
        },
		"sqlServerServiceAccountPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The SQL Server Service Account password"
            },
			"defaultValue": "Demo@1234567890"
        },
		"sqlStorageAccountName": {
			"type": "string",
			"metadata": {
				"description": "The name of Sql Server Storage Account"
			},
			"defaultValue": "azptplsqlstg"
		},
		"sqlStorageAccountType": {
		  "type": "string",
		  "allowedValues": [
		    "Standard_LRS",
		    "Premium_LRS"
		],
		  "metadata": {
			"description": "The type of the Sql Server Storage Account created"
		  },
		  "defaultValue": "Standard_LRS"
		},
		"dcStorageAccountName": {
		  "type": "string",
		  "metadata": {
			"description": "The name of  DC Storage Account"
		  },
		  "defaultValue": "azaspldcstg"
		},
		"dcStorageAccountType": {
		  "type": "string",
		  "allowedValues": [
			"Standard_LRS",
			"Standard_GRS",
			"Standard_RAGRS",
			"Premium_LRS"
		  ],
		  "metadata": {
			"description": "The type of the DC Storage Account created"
		  },
		  "defaultValue": "Standard_LRS"
		},
		"deploymentPrefix": {
            "defaultValue": "aodns",
            "type": "String",
            "metadata": {
                "description": "The DNS Prefix for the Public IP Address for the Always On Cluster"
            }
        },
		"sqlLBIPAddress": {
		  "type": "string",
		  "metadata": {
			"description": "The IP address of the new SQL Server Internal Load Balancer"
		  },
		  "defaultValue": "172.16.1.36"
		},
		"ARSMasterNodeNamePrefix": {
            "defaultValue": "ARS-Master-Node",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"ARSDataNodeNamePrefix": {
            "defaultValue": "ARS-Data-Node",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"GoldWindowsMultisessionImage": {
            "type": "string",
            "allowedValues": [
					"Windows 10 Enterprise multi-session, version 1909",
					"Windows 10 Enterprise multi-session, version 2004",
					"Windows 10 Enterprise multi-session, version 20H2",
					"Windows 10 Enterprise multi-session, version 21H1",
					"Windows 10 Enterprise multi-session, version 21H2",
			        "Windows 10 Enterprise multi-session, version 1909 - Gen2",
					"Windows 10 Enterprise multi-session, version 2004 - Gen2",
					"Windows 10 Enterprise multi-session, version 20H2 - Gen2",
					"Windows 10 Enterprise multi-session, version 21H1 - Gen2",
					"Windows 10 Enterprise multi-session, version 21H2 - Gen2",
					"Windows 11 Enterprise multi-session",
                    "Windows 10 Enterprise multi-session, version 1909 + Microsoft 365 Apps - Gen2",
					"Windows 10 Enterprise multi-session, version 2004 + Microsoft 365 Apps - Gen2",
					"Windows 10 Enterprise multi-session, version 20H2 + Microsoft 365 Apps - Gen2",
                	"Windows 10 Enterprise multi-session, version 21H1 + Microsoft 365 Apps - Gen2",
					"Windows 10 Enterprise multi-session, version 21H2 + Microsoft 365 Apps - Gen2",
					"Windows 11 Enterprise multi-session + Microsoft 365 Apps"
            ],
            "defaultValue": "Windows 10 Enterprise multi-session, version 21H2 + Microsoft 365 Apps - Gen2",
            "metadata": {
                "description": "The type of the operating system you want to deploy for Pooled VDI."
            }
        },
		"GoldMultisessionVMNamePrefix": {
            "defaultValue": "GoldWinMS",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"GoldWindowsDedicatedImage": {
            "type": "string",
            "allowedValues": [
			    	"Windows 10 Enterprise, Version 1909",
					"Windows 10 Enterprise, Version 2004",
					"Windows 10 Enterprise, Version 20H2",
					"Windows 10 Enterprise, Version 21H1",
					"Windows 10 Enterprise, Version 21H2",
                	"Windows 10 Enterprise, Version 1909 - Gen2",
                	"Windows 10 Enterprise, Version 2004 - Gen2",
                	"Windows 10 Enterprise, Version 20H2 - Gen2",
					"Windows 10 Enterprise, Version 21H1 - Gen2",
					"Windows 10 Enterprise, Version 21H2 - Gen2",
					"Windows 11 Enterprise"
            ],
            "defaultValue": "Windows 10 Enterprise, Version 21H2 - Gen2",
            "metadata": {
                "description": "The type of the operating system you want to deploy for Personal VDI."
            }
        },
		"GoldDedicatedVMNamePrefix": {
            "defaultValue": "GoldWinDS",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"GoldWindowsServerImage": {
            "type": "string",
            "allowedValues": [
                "Windows Server 2016 Datacenter",
                "Windows Server 2019 Datacenter",
                "Windows Server 2022 Datacenter"
            ],
            "defaultValue": "Windows Server 2022 Datacenter",
            "metadata": {
                "description": "The type of the operating system you want to deploy for Desktop and Applicaton Virtualization."
            }
        },
		"GoldWindowsServerVMNamePrefix": {
            "defaultValue": "GoldWinSrv",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
			"allowedValues": [
                "Standard_D2s_v3",
                "Standard_B2s"
            ],
            "metadata": {
             "description": "Size of the Gold Virtual Machine"
            }
        },
		"osDiskType": {
            "type": "string",
			"defaultValue": "Standard_LRS"
        },
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The location of resources such as templates and DSC modules that the script is dependent"
				},
			"defaultValue": "https://raw.githubusercontent.com/pravindkr/Azure/main/B2B/azuredeploy.json"
		},
		"_artifactsLocationSasToken": {
			"type": "securestring",
			"metadata": {
				"description": "Auto-generated token to access _artifactsLocation"
			},
		"defaultValue": ""
		},
		"patchMode": {
            "type": "string",
			"defaultValue": "AutomaticByOS"
        },
		"autoPatchingDay": {
            "defaultValue": "Sunday",
            "type": "String",
            "metadata": {
                "description": "The day of a week for auto patching"
            }
        },
        "autoPatchingStartHour": {
            "defaultValue": "2",
            "type": "String",
            "metadata": {
                "description": "The start hour of a day for auto patching"
            }
        },
        "sqlAOAGName": {
            "defaultValue": "alwayson-ag",
            "type": "String",
            "metadata": {
                "description": "The Sql AlwaysOn Group Name"
            }
        },
        "sqlAOListenerPort": {
            "defaultValue": "1433",
            "type": "String",
            "metadata": {
                "description": "The Sql AG Listener port"
            }
        },
        "sqlAOListenerName": {
            "defaultValue": "alwayson-ag-listener",
            "type": "String",
            "metadata": {
                "description": "The Sql AG Listener Name"
            }
        },
        "sqlServerVersion": {
            "defaultValue": "sql2019-ws2019",
			"allowedValues": [
                "sql2019-ws2022",
                "sql2019-ws2019",
                "SQL2017-WS2016",
                "SQL2016-WS2012R2"
            ],
            "type": "String",
            "metadata": {
                "description": "The Sql Server Version"
            }
        },
        "numberOfSqlVMDisks": {
            "defaultValue": "2",
            "allowedValues": [
                "1",
                "2",
                "3",
                "4"
            ],
            "type": "String",
            "metadata": {
                "description": "The Sql VM Disk Size"
            }
        },
        "workloadType": {
            "defaultValue": "GENERAL",
            "allowedValues": [
                "GENERAL",
                "OLTP",
                "DW"
            ],
            "type": "String",
            "metadata": {
                "description": "The Sql VM work load type: GENERAL - general work load; DW - datawear house work load; OLTP - Transactional processing work load"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
		"vmList": {
		  "type": "string",
		  "minLength": 3,
		  "defaultValue": "HyWorksBroker-0, HyWorks-Ctrl-0",
		  "metadata": {
			"description": "List of virtual machines to be domain joined, if using multiple VMs, make their names comma separate. E.g. VM01, VM02, VM03."
		  }
		}
		/*
		"ouPath": {
		  "type": "string",
		  "defaultValue": "DC=accops; DC=local",
		  "metadata": {
			"description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
		  }
		} */

    },
    "variables": {
        "availabilitySet1Name": "AvSetHSWebTier",
		"availabilitySet2Name": "AvSetHSMgmtTier",
		"availabilitySet3Name": "AvSetHWBrokerTier",
		"availabilitySet4Name": "AvSetHWControlTier",
		"availabilitySet5Name": "AvSetADDSTier",
		"availabilitySet6Name": "AvSetSQLTier",
		"availabilitySet7Name": "AvSetARSMgmtTier",
		"availabilitySet8Name": "AvSetARSDataTier",
        	"storageAccountType": "Standard_LRS",
        	"storageAccountName": "[uniqueString(resourceGroup().id)]",
        	"virtualNetworkName": "AccopsDaasVNet",
        	"subnet1Name": "HySecureWebSubnet",
		"subnet2Name": "HySecureMgmtSubnet",
		"subnet3Name": "HyWorksBrokerSubnet",
		"subnet4Name": "HyWorksControllerSubnet",
		"subnet5Name": "ADDSSubnet",
		"subnet6Name": "SQLSubnet",
		"subnet7Name": "VDISubnet",
		"subnet8Name": "ARSSubnet",
		"subnet9Name": "AzureFirewallSubnet",
		"subnet10Name": "AzureBastionSubnet",
		"subnet11Name": "GatewaySubnet",
		"subnets": [
                {
                        "name": "[variables('subnet9Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.0/26"
                        }
                },
				{
                        "name": "[variables('subnet10Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.64/26"
                        }
                },
				{
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.128/27"
                        }
                },
				{
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.160/27"
                        }
                },
				{
                        "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.192/27"
                        }
                },
				{
                        "name": "[variables('subnet4Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.224/27"
                        }
                },
				{
                        "name": "[variables('subnet5Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.0/27"
                        }
                },
				{
                        "name": "[variables('subnet6Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.32/27"
                        }
                },
				{
                        "name": "[variables('subnet11Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.224/27"
                        }
                },
				{
                        "name": "[variables('subnet8Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.64/27"
                        }
                },
				{
                        "name": "[variables('subnet7Name')]",
                        "properties": {
                            "addressPrefix": "172.16.16.0/20"
                        }
                }
			
		],
        "sql1AddressNameWithSuffix": "[substring(concat(variables('sql1AddressName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
        "sql0AddressNameWithSuffix": "[substring(concat(variables('sql0AddressName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
        "loadBalancer2Name": "Intlb",
	"publicIPAddressName": "PubliclbIP",
	"loadBalancer1Name": "Extlb",
	"loadBalancer3Name": "HWBrokerlb",
	"lbSettings": {
            "rdpLBFE": "rdpLBFE",
            "sqlLBFE": "sqlLBFE",
            "adLBBE": "adLBBE",
            "sqlLBBE": "sqlLBBE",
            "rdpLBName": "rdpLoadBalancer",
            "sqlLBName": "sqlLoadBalancer"
        	},
	"SQLAOProbe": "SQLAlwaysOnEndPointProbe",
	"sql1AddressName": "sql1IP",
        "sql0AddressName": "sql0IP",
	"vmSettings": {
		"availabilitySets": {
			"sqlAvailabilitySetName": "sqlAvailabilitySet"
		  },
		"noOfSqlVMs": 2,
		"vmContainerName": "vhds",
		"sqlVMName": "sqlserver-",
		"sqlwVMName": "cluster-fsw",
		"windowsImagePublisher": "MicrosoftWindowsServer",
		"windowsImageOffer": "WindowsServer",
		"windowsImageSKU": "2019-datacenter-smalldisk-g2",
		"sqlImagePublisher": "MicrosoftSQLServer",
		"sqlImageOffer": "[parameters('sqlServerVersion')]",
		"rdpPort": 3389,
		"windowsDiskSize": 128,
		"sqlDiskSize": 100
        	},
	"sqlAOEPName": "[concat(parameters('deploymentPrefix'),'-hadr')]",
	"sharePath": "[concat(parameters('deploymentPrefix'),'-fsw')]",
	"clusterName": "[concat(parameters('deploymentPrefix'),'-fc')]",
	"sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",		
	"loadBalancer4Name": "SQLIntlb",
    "networkInterface1Name": "HSWebNic",
	"networkInterface2Name": "HSMgmtNic",
	"networkInterface3Name": "HWBrokerNic",
	"networkInterface4Name": "HWControlNic",
	"networkInterface5Name": "ADDCNic",
	"networkInterface6Name": "SQLNic",
	"networkInterface7Name": [
			"MSVDINic",
			"DVDINic",
			"SHDNic"
		],	
	"networkInterface8Name": "ARSNic",
	"networkInterface9Name": [
			"ADPDCNic",
			"ADBDCNic"
		],
	"vmName": [
            "HQPDC",
            "HQBDC"
        	],
	"ipAddress": [
			"172.16.1.4",
			"172.16.1.5"
		],
	"vnetTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
	"nicTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/nic.json', parameters('_artifactsLocationSasToken')))]",
	"subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]",
    "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]",
	"subnet3Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet3Name'))]",
	"subnet4Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet4Name'))]",
	"subnet5Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet5Name'))]",
	"subnet6Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet6Name'))]",
	"subnet7Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet7Name'))]",
	"subnet8Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet8Name'))]",
	"subnet9Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet9Name'))]",
	"subnet10Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet10Name'))]",
	"subnet11Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet11Name'))]",
	"derivedIds": {
            "sqlBEAddressPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbSettings').sqlLBName,variables('lbSettings').sqlLBBE)]",
            "sqllbFEConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbSettings').sqlLBName,variables('lbSettings').sqlLBFE)]",
            "sqllbProbeID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbSettings').sqlLBName,variables('SQLAOProbe'))]"
        	},
	"networkSecurityGroup1Name": "HySecure-Web-NSG",
	"networkSecurityGroup2Name": "HySecure-Mgmt-NSG",
	"networkSecurityGroup3Name": "HyWorks-Broker-NSG",
	"networkSecurityGroup4Name": "HyWorks-Controller-NSG",
	"networkSecurityGroup5Name": "ADDS-NSG",
	"networkSecurityGroup6Name": "SQL-NSG",
	"networkSecurityGroup7Name": "VDI-NSG",
	"networkSecurityGroup8Name": "ARS-NSG",
	"SQL2012SP2-WS2012R2": "Enterprise",
        "SQL2012SP3-WS2012R2": "Enterprise",
        "SQL2014-WS2012R2": "Enterprise",
        "SQL2014SP2-WS2012R2": "Enterprise",
        "SQL2016-WS2012R2": "Enterprise",
        "SQL2017-WS2016": "Enterprise",
        "sql2019-ws2019": "Enterprise",
        "sql2019-ws2022": "Enterprise",
        "Monday": true,
        "Tuesday": true,
        "Wednesday": true,
        "Thursday": true,
        "Friday": true,
        "Saturday": true,
        "Sunday": true,
        "Never": false,
        "Everyday": true,
        "numberOfHySecureMgmtInstances": 1,
	"numberOfHyWorksControllerInstances": 1,
	"numberOfADDSInstances": 2,
	"numberOfSQLInstances": 2,
	"numberOfARSMasterInstances": 1,
	"numberOfARSDataInstances": 1,
	"numberOfGoldInstances": 1,
	"numberOfInstances" : 2,
	"domainJoinOptions": 3,
    "vmListArray": "[split(parameters('vmList'),',')]",
	"configuration": {
            "vnetwithDNSTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nested/vnet-with-dns-server.json', parameters('_artifactsLocationSasToken')))]",
            "nicTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nested/nic.json', parameters('_artifactsLocationSasToken')))]",
            "rdpIPAdressSetupURL": "[uri(parameters('_artifactsLocation'), concat('nested/publicip-rdp.json', parameters('_artifactsLocationSasToken')))]",
            "setupLBsUrl": "[uri(parameters('_artifactsLocation'), concat('nested/setupLBs.json', parameters('_artifactsLocationSasToken')))]",
            "creatingNicsUrl": "[uri(parameters('_artifactsLocation'), concat('nested/creatingNICS.json', parameters('_artifactsLocationSasToken')))]",
            "storageAccountVirtualNetworkPublicIP": "[uri(parameters('_artifactsLocation'), concat('nested/storageAccountVirtualNetworkPublicIP.json', parameters('_artifactsLocationSasToken')))]",
            "provisioningVMs": "[uri(parameters('_artifactsLocation'), concat('nested/provisioningVM', parameters('numberOfSqlVMDisks'),'.json', parameters('_artifactsLocationSasToken')))]",
            "configuringBackupADVM": "[uri(parameters('_artifactsLocation'), concat('nested/configuringBackupADVM.json', parameters('_artifactsLocationSasToken')))]",
            "preparingAlwaysOnSqlServer": "[uri(parameters('_artifactsLocation'), concat('nested/preparingSqlServer.json', parameters('_artifactsLocationSasToken')))]",
            "configuringAlwaysOn": "[uri(parameters('_artifactsLocation'), concat('nested/configuringAlwaysOn.json', parameters('_artifactsLocationSasToken')))]",
            "adPDCModulesURL": "[uri(parameters('_artifactsLocation'), concat('scripts/CreateADPDC.ps1.zip', parameters('_artifactsLocationSasToken')))]",
            "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
            "adBDCModulesURL": "[uri(parameters('_artifactsLocation'), concat('scripts/CreateADBDC.ps1.zip', parameters('_artifactsLocationSasToken')))]",
            "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
            "fswModulesURL": "[uri(parameters('_artifactsLocation'), concat('scripts/CreateFileShareWitness.ps1.zip', parameters('_artifactsLocationSasToken')))]",
            "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
            "sqlAOPrepareModulesURL": "[uri(parameters('_artifactsLocation'), concat('scripts/PrepareAlwaysOnSqlServer.ps1.zip', parameters('_artifactsLocationSasToken')))]",
            "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
            "createClusterModulesURL": "[uri(parameters('_artifactsLocation'), concat('scripts/CreateFailoverCluster.ps1.zip', parameters('_artifactsLocationSasToken')))]",
            "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster"
        }
    },
	
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "StorageV2"
        },
		{
		  "name": "[parameters('sqlStorageAccountName')]",
		  "type": "Microsoft.Storage/storageAccounts",
		  "apiVersion": "2019-06-01",
		  "location": "[parameters('location')]",
		  "sku": {
			"name": "[parameters('SqlStorageAccountType')]"
		  },
		  "kind": "StorageV2"
		},
		{
		  "type": "Microsoft.Storage/storageAccounts",
		  "name": "[parameters('dcStorageAccountName')]",
		  "apiVersion": "2019-06-01",
		  "location": "[parameters('location')]",
		  "sku": {
			"name": "[parameters('DcStorageAccountType')]"
		  },
		  "kind": "StorageV2"
		},
		{
		  "type": "Microsoft.Storage/storageAccounts",
		  "name": "[concat(uniquestring(parameters('sqlStorageAccountName')), 'fsw')]",
		  "apiVersion": "2019-06-01",
		  "location": "[parameters('location')]",
		  "sku": {
			"name": "Standard_LRS"
		  },
		  "kind": "StorageV2"
		},
		{
		  "type": "Microsoft.Storage/storageAccounts",
		  "name": "[concat(uniquestring(parameters('sqlStorageAccountName')), 'diag')]",
		  "apiVersion": "2019-06-01",
		  "location": "[parameters('location')]",
		  "sku": {
			"name": "Standard_LRS"
		  },
		  "kind": "StorageV2"
		},
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet1Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet2Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet3Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet4Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet5Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet6Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet7Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet8Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup1Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "Endpoint-HTTPS-443",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "443",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
				{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup2Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-all",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "*",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup3Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup4Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup5Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup6Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup7Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup8Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-SSH",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "22",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup1Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup2Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup3Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup4Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup5Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup6Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup7Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup8Name'))]"
			],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet9Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.0/26"
                        }
                    },
					                    {
                        "name": "[variables('subnet10Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.64/26"
                        }
                    },
					{
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.128/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup1Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.160/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup2Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.192/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup3Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet4Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.224/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup4Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet5Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.0/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup5Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet6Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.32/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup6Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet11Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.224/27"
                        }
                    },
					{
                        "name": "[variables('subnet8Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.64/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup8Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet7Name')]",
                        "properties": {
                            "addressPrefix": "172.16.16.0/20",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup7Name'))]"
								}
                        }
                    }
                ]
            }
        },
		{
			"apiVersion": "2020-08-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"sku": {
                "name": "Standard"
            },
			"properties": {
			"publicIPAddressVersion": "IPv4",
			"publicIPAllocationMethod": "Static"
		/*	"dnsSettings": { */
		/*	"domainNameLabel": "[parameters('dnsNameforLBIP')]" */
		/*				} */
				}
		},
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface1Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('loadBalancer1Name')]"
            ],
            "properties": {
			/*    "primary": true, */
			/*	"enableAcceleratedNetworking": true, */
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer1Name'), 'BackendPool1')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfWebTierInstances')]"
            }
        },
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface2Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('loadBalancer2Name')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            }
        },
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface3Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('loadBalancer2Name')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HyworksBrokerBackendPool')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            }
        },
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface4Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
       /*         "[variables('loadBalancer3Name')]" */
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet4Ref')]"
                            }
                        /*    "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer3Name'), 'BackendPool3')]"
                                }
                            ]*/
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            }
        },
/*SQL Load Balancer*/
            
		{
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
			"comments": "Create Load Balancers for SQL",
            "name": "LoadBalancers",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').setupLBsUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sqlLBName": {
                        "value": "[variables('lbSettings').sqlLBName]"
                    },
                    "sqlLBFE": {
                        "value": "[variables('lbSettings').sqlLBFE]"
                    },
                    "sqlLBIPAddress": {
                        "value": "[parameters('sqlLBIPAddress')]"
                    },
                    "sqlSubnetRef": {
                        "value": "[variables('subnet6Ref')]"
                    },
                    "sqlLBBE": {
                        "value": "[variables('lbSettings').sqlLBBE]"
                    },
                    "sqlLBBEID": {
                        "value": "[variables('derivedIds').sqlBEAddressPoolID]"
                    },
                    "sqllbFEConfigID": {
                        "value": "[variables('derivedIds').sqllbFEConfigID]"
                    },
                    "sqllbProbeID": {
                        "value": "[variables('derivedIds').sqllbProbeID]"
                    },
                    "SQLAOProbe": {
                        "value": "[variables('SQLAOProbe')]"
                    }
                }
            }
        }, 
			
		{
		  "name": "CreatingNetworkInterfaces",
		  "type": "Microsoft.Resources/deployments",
		  "apiVersion": "2020-10-01",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
				"Microsoft.Resources/deployments/LoadBalancers"
            ],
		  "properties": {
			"mode": "Incremental",
			"templateLink": {
			  "uri": "[variables('configuration').creatingNicsUrl]",
			  "contentVersion": "1.0.0.0"
			},
			"parameters": {
			  "location": {
				"value": "[parameters('location')]"
			  },
			  "sqlVMName": {
				"value": "[variables('vmSettings').sqlVMName]"
			  },
			  "sqlSubnetRef": {
				"value": "[variables('subnet6Ref')]"
			  },
			  "sqlBEAddressPoolID": {
				"value": "[variables('derivedIds').sqlBEAddressPoolID]"
			  },
			  "sqlwNicName": {
				"value": "[variables('sqlwNicName')]"
			  }
			}
		  }
		},
		 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-11-01",
			"name": "[variables('networkInterface9Name')[copyIndex()]]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "nicLoop",
				"count": 2
				},
			"dependsOn": [
				"[variables('virtualNetworkName')]"
				],
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('iPAddress')[copyIndex()]]",
						"subnet": {
							"id": "[variables('subnet5Ref')]"
							}
						}
					}
				]
			}
		},
		
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-11-01",
			"name": "[variables('networkInterface7Name')[copyIndex()]]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "nicLoop",
				"count": 3
				},
			"dependsOn": [
				"[variables('virtualNetworkName')]"
				],
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('subnet7Ref')]"
							}
						}
					}
				]
			}
		},
		
		/* Public Load balancer*/
		    {
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('loadBalancer1Name')]",
			"apiVersion": "2020-06-01",
			"location": "[parameters('location')]",
			"comments": "This Load Balancer is used to load balance Web traffic among Web Tier VMs",
		/*	"tags": {
			"displayName": "External Load Balancer",
			"quickstartName": "[variables('quickstartTags').name]",
			"provider": "[variables('redHatTags').provider]"
			},*/
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
			],
			"sku": {
                "name": "Standard"
            },
			"properties": {
				"frontendIPConfigurations": [
				{
					"name": "HySecureInternalFrontend",
						"properties": {
							"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							}
					}
				}
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer1Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer1Name'), 'BackendPool1')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer1Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "HTTPS"
						
					}	
        ],
        "probes": [
          {
            "name": "HySecureTCPHealthProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
	/*Internal Load balancer*/
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-06-01",
            "name": "[variables('loadBalancer2Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "privateIPAddress": "172.16.0.164",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "HySecureInternalFrontend"
                    },
				    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "privateIPAddress": "172.16.0.196",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "HyworksBrokerFrontend"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "HySecureMgmtBackendPool"
                    },
					{
                        "name": "HyworksBrokerBackendPool"
                    }
					
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "HTTPS"
						
					},	
					{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 3306,
                            "backendPort": 3306,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "dbport"
                    },
										{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 939,
                            "backendPort": 939,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "infoagent"
                    },
										{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 3636,
                            "backendPort": 3636,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "hapage"
                    },
					{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 51234,
                            "backendPort": 51234,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "Remote-Meeting"
                    },
					{
                        "name": "HyWorksBorkerConnectivity",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HyworksBrokerFrontend')]"
                            },
                            "frontendPort": 38866,
                            "backendPort": 38866,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "SourceIPProtocol",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HyworksBrokerBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HyworksBrokerHealthProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "HySecureTCPHealthProbe"
                    },
					{
                        "name": "HyworksBrokerHealthProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 38866,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
					{
                        "name": "HySecureHTTPSHealthProbe",
                        "properties": {
                            "protocol": "Https",
                            "port": 443,
                            "requestPath": "/statuscheck",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },	
	/*HySecure Web Tier Virtual Machine*/
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HysecureWebNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet1Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet1Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HysecureWebNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "accops",
                        "offer": "hysecure",
                        "sku": "accops-hysecure-5427",
                        "version": "1.0.0"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface1Name'), copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
			"plan": {
                "name": "accops-hysecure-5427",
                "publisher": "accops",
                "product": "hysecure"
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfWebTierInstances')]"
            }
        },
	/*HySecure Mgmt Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HysecureManagementNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet2Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet2Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HysecureManagementNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "accops",
                        "offer": "hysecure",
                        "sku": "accops-hysecure-5427",
                        "version": "1.0.0"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface2Name'), copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
			"plan": {
                "name": "accops-hysecure-5427",
                "publisher": "accops",
                "product": "hysecure"
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfHySecureMgmtInstances')]"
            }
        },
	/*HyWorks Broker Tier Virtual Machine*/		
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HyworksBrokerNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet3Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet3Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HyworksBrokerNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-smalldisk-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface3Name'), copyindex()))]"
                        }
                    ]
                },
				"licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfBrokerTierInstances')]"
            }
        },
/*HyWorks Control Tier Virtual Machine*/				
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HyworksControllerNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet4Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet4Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HyworksControllerNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-smalldisk-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface4Name'), copyindex()))]"
                        }
                    ]
                },
				"licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfHyWorksControllerInstances')]"
            }
        },
	/*Gold Windows Multisession Image VDI Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('GoldMultisessionVMNamePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GoldMultisessionVMNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "office-365",
                        "sku": "win11-21h2-avd-m365",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MSVDINic')]"
                        }
                    ]
                },
				"licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
/*Gold Windows Dedicated Image VDI Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('GoldDedicatedVMNamePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GoldDedicatedVMNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-avd-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'DVDINic')]"
                        }
                    ]
                },
				"licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
/*Gold Windows Server Image VDI Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('GoldWindowsServerVMNamePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GoldWindowsServerVMNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-smalldisk-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'SHDNic')]"
                        }
                    ]
                },
				"licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
		
/* SQL VMS*/

        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "ProvisioningVMs",
            "dependsOn": [
                "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').provisioningVMs]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlAvailabilitySetName": {
                        "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
                    },
					"sqlStorageAccountName": {
						"value": "[parameters('sqlStorageAccountName')]"
					},
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
					"vmContainerName": {
					"value": "[variables('vmSettings').vmContainerName]"
					},
                    "sqlVMName": {
                        "value": "[variables('vmSettings').sqlVMName]"
                    },
                    "sqlVMSize": {
                        "value": "[parameters('sqlVMSize')]"
                    },
                    "fswImagePublisher": {
                        "value": "[variables('vmSettings').windowsImagePublisher]"
                    },
                    "fswImageOffer": {
                        "value": "[variables('vmSettings').windowsImageOffer]"
                    },
                    "fswImageSKU": {
                        "value": "[variables('vmSettings').windowsImageSKU]"
                    },
                    "sqlImagePublisher": {
                        "value": "[variables('vmSettings').sqlImagePublisher]"
                    },
                    "sqlImageOffer": {
                        "value": "[variables('vmSettings').sqlImageOffer]"
                    },
                    "sqlImageSKU": {
                        "value": "[variables(parameters('sqlServerVersion'))]"
                    },
                    "witnessVMSize": {
                        "value": "[parameters('witnessVMSize')]"
                    },
                    "sqlwVMName": {
                        "value": "[variables('vmSettings').sqlwVMName]"
                    },
                    "sqlwNicName": {
                        "value": "[variables('sqlwNicName')]"
                    }
                }
            }
        }, 
		
		
/*Domain Controller ADDS Tier Virtual Machine*/		
		{
			"type": "Microsoft.Compute/virtualMachines",
			  "apiVersion": "2020-12-01",
			  "name": "[variables('vmName')[copyIndex()]]",
			  "location": "[parameters('location')]",
			  "dependsOn": [
				"nicLoop",
				"[variables('availabilitySet5Name')]"
			  ],
			  "copy": {
				"name": "vmLoop",
				"count": 2
			  },
			  "properties": {
				"availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet5Name'))]"
                }, 
				"hardwareProfile": {
				  "vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
				  "computerName": "[variables('vmName')[copyIndex()]]",
				  "adminUsername": "[parameters('adminUsername')]",
				  "adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
				  "imageReference": {
					"publisher": "MicrosoftWindowsServer",
					"offer": "WindowsServer",
					"sku": "2022-datacenter-smalldisk-g2",
					"version": "latest"
				  },
				  "osDisk": {
					"createOption": "FromImage",
					"managedDisk": {
					  "storageAccountType": "[parameters('osDiskType')]"
					}
				  },
				   "dataDisks": [
						{
						"diskSizeGB": 32,
						"managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
						"lun": 0,
						"createOption": "Empty"
						}
					]
				},
				"networkProfile": {
				  "networkInterfaces": [
					{
					  "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface9Name')[copyIndex()])]"
						}
					]
					}
				}
			},

        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-03-01",
            "name": "[concat(variables('vmName')[0],'/InstallDomainController')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "vmLoop"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.75",
                "autoUpgradeMinorVersion": true,
                "settings": {
					"modulesURL": "[variables('configuration').adPDCModulesURL]",
					"configurationFunction": "[variables('configuration').adPDCConfigurationFunction]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        }
                    }
                },
				"protectedSettings": {
					"items": {
                        "adminPassword": "[parameters('adminPassword')]"
							}
				}
            }
        },
		/*
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "UpdatingDNStoPrimaryADVM",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[0], 'InstallDomainController')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "172.16.0.0/16"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('ipAddress')[0]]"
                        ]
                    }
                }
            }
        },*/
		
		{
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "UpdatingDNStoBDCNIC",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[0], 'InstallDomainController')]"
            ],
				"properties": {
					"mode": "Incremental",
					"templateLink": {
					  "uri": "[variables('nicTemplateUri')]",
					  "contentVersion": "1.0.0.0"
					},					
				"parameters": {
				  "networkInterface9Name": {
					"value": "[variables('networkInterface9Name')[1]]"
				  },
				"ipConfigurations": {
					"value": [
					  {
						"name": "ipconfig1",
						"properties": {
						  "privateIPAllocationMethod": "Dynamic",
						  "subnet": {
							"id": "[variables('subnet5Ref')]"
						  }
						}
					  }
					]
				  },
				"dnsServers": {
					"value": [
					  "[variables('ipAddress')[0]]"
					]
				  },
				"location": {
					"value": "[parameters('location')]"
					}
				}
		    }
		}, 
		
		{
		  "name": "ConfiguringBackupADVM",
		  "type": "Microsoft.Resources/deployments",
		  "apiVersion": "2020-10-01",
		  "dependsOn": [
			"[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[0], 'InstallDomainController')]"
		  ],
		  "properties": {
			"mode": "Incremental",
			"templateLink": {
			  "uri": "[variables('configuration').configuringBackupADVM]",
			  "contentVersion": "1.0.0.0"
			},
			"parameters": {
			  "location": {
				"value": "[parameters('location')]"
			  },
			  "adBDCVMName": {
				"value": "[variables('vmName')[1]]"
			  },
			  "adminUsername": {
				"value": "[parameters('adminUsername')]"
			  },
			  "adminPassword": {
				"value": "[parameters('adminPassword')]"
			  },
			  "domainName": {
				"value": "[parameters('domainName')]"
			  },
			  "adBDCConfigurationFunction": {
				"value": "[variables('configuration').adBDCConfigurationFunction]"
			  },
			  "adBDCModulesURL": {
				"value": "[variables('configuration').adBDCModulesURL]"
			  }
			}
		  }
		},

        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "UpdatingDNSwithBackupADVM",
            "dependsOn": [
                "Microsoft.Resources/deployments/ConfiguringBackupADVM"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "172.16.0.0/16"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('ipAddress')[0]]",
                            "[variables('ipAddress')[1]]"
                        ]
                    }
                }
            }
        },
			
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "UpdatingSQLWNic",
            "dependsOn": [
                "Microsoft.Resources/deployments/ConfiguringBackupADVM"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').nicTemplateURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[variables('sqlwNicName')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('subnet6Ref')]"
                                    }
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [
                            "[variables('ipAddress')[0]]",
                            "[variables('ipAddress')[1]]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "UpdatingSQL0Nic",
            "dependsOn": [
                "Microsoft.Resources/deployments/UpdatingSQLWNic"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').nicTemplateURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[concat(variables('vmSettings').sqlVMName, '0-nic')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('subnet6Ref')]"
                                    },
                                    "loadBalancerBackendAddressPools": [
                                        {
                                            "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [
                            "[variables('ipAddress')[0]]",
                            "[variables('ipAddress')[1]]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "UpdatingSQL1Nic",
            "dependsOn": [
                "Microsoft.Resources/deployments/UpdatingSQL0Nic"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').nicTemplateURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[concat(variables('vmSettings').sqlVMName, '1-nic')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('subnet6Ref')]"
                                    },
                                    "loadBalancerBackendAddressPools": [
                                        {
                                            "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [
                            "[variables('ipAddress')[0]]",
                            "[variables('ipAddress')[1]]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "PreparingAlwaysOnSqlServer",
            "dependsOn": [
                "Microsoft.Resources/deployments/UpdatingSQL0Nic"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').preparingAlwaysOnSqlServer]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlVMName": {
                        "value": "[variables('vmSettings').sqlVMName]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "sqlAOPrepareModulesURL": {
                        "value": "[variables('configuration').sqlAOPrepareModulesURL]"
                    },
                    "sqlAOPrepareConfigurationFunction": {
                        "value": "[variables('configuration').sqlAOPrepareConfigurationFunction]"
                    },
                    "sqlAOEPName": {
                        "value": "[variables('sqlAOEPName')]"
                    },
                    "sqlServerServiceAccountUserName": {
                        "value": "[parameters('sqlServerServiceAccountUserName')]"
                    },
                    "sqlServerServiceAccountPassword": {
                        "value": "[parameters('sqlServerServiceAccountPassword')]"
                    },
                    "sharePath": {
                        "value": "[variables('sharePath')]"
                    },
                    "adPDCVMName": {
                        "value": "[variables('vmName')[0]]"
                    },
                    "sqlwVMName": {
                        "value": "[variables('vmSettings').sqlwVMName]"
                    },
                    "fswModulesURL": {
                        "value": "[variables('configuration').fswModulesURL]"
                    },
                    "fswConfigurationFunction": {
                        "value": "[variables('configuration').fswConfigurationFunction]"
                    },
                    "autoPatchingDay": {
                        "value": "[parameters('autoPatchingDay')]"
                    },
                    "autoPatchingStartHour": {
                        "value": "[parameters('autoPatchingStartHour')]"
                    },
                    "autoPatchingEnable": {
                        "value": "[variables(parameters('autoPatchingDay'))]"
                    },
                    "numberOfDisks": {
                        "value": "[parameters('numberOfSqlVMDisks')]"
                    },
                    "workloadType": {
                        "value": "[parameters('workloadType')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "ConfiguringAlwaysOn",
            "dependsOn": [
                "Microsoft.Resources/deployments/PreparingAlwaysOnSqlServer"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').configuringAlwaysOn]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlVMName": {
                        "value": "[variables('vmSettings').sqlVMName]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "sqlAOEPName": {
                        "value": "[variables('sqlAOEPName')]"
                    },
                    "sqlServerServiceAccountUserName": {
                        "value": "[parameters('sqlServerServiceAccountUserName')]"
                    },
                    "sqlServerServiceAccountPassword": {
                        "value": "[parameters('sqlServerServiceAccountPassword')]"
                    },
                    "createClusterModulesURL": {
                        "value": "[variables('configuration').createClusterModulesURL]"
                    },
                    "createClusterConfigurationFunction": {
                        "value": "[variables('configuration').createClusterConfigurationFunction]"
                    },
                    "clusterName": {
                        "value": "[variables('clusterName')]"
                    },
                    "sharePath": {
                        "value": "[variables('sharePath')]"
                    },
                    "sqlAOAGName": {
                        "value": "[parameters('sqlAOAGName')]"
                    },
                    "sqlAOListenerName": {
                        "value": "[parameters('sqlAOListenerName')]"
                    },
                    "sqlAOListenerPort": {
                        "value": "[parameters('sqlAOListenerPort')]"
                    },
                    "sqlLBName": {
                        "value": "[variables('lbSettings').sqlLBName]"
                    },
                    "sqlLBIPAddress": {
                        "value": "[parameters('sqlLBIPAddress')]"	
                    },
                    "adPDCVMName": {
                        "value": "[variables('vmName')[0]]"
                    },
                    "sqlwVMName": {
                        "value": "[variables('vmSettings').sqlwVMName]"
                    },
                    "numberOfDisks": {
                        "value": "[parameters('numberOfSqlVMDisks')]"
                    },
                    "workloadType": {
                        "value": "[parameters('workloadType')]"
                    }
                }
            }
        },
		
		{
		 "comments": "Join domain - JsonADDomainExtension",
		 "apiVersion": "2021-03-01",
		 "type": "Microsoft.Compute/virtualMachines/extensions",
		 "name": "[concat(trim(variables('vmListArray')[copyIndex()]),'/joindomain')]",
		 "dependsOn": [
					"Microsoft.Resources/deployments/UpdatingDNSwithBackupADVM"
					],
		"location": "[parameters('location')]",
		"copy": {
			"name": "vmDomainJoinCopy",
			"count": "[length(variables('vmListArray'))]"
		  },
		"properties": {
					"publisher": "Microsoft.Compute",
					"type": "JsonADDomainExtension",
					"typeHandlerVersion": "1.3",
					"autoUpgradeMinorVersion": true,
					"settings": {
					  "Name": "[parameters('domainName')]",
					  "User": "[parameters('adminUsername')]",
					  "Restart": "true",
					  "Options": "[variables('domainJoinOptions')]"
					  /*"OUPath": "[parameters('ouPath')]"*/
								},
					"protectedSettings": {
						"items": {
							"Password": "[parameters('adminPassword')]"
							}
						}
				}
		}
    ],
    "outputs": {}
}
